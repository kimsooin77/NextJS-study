{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport shortid from \"shortid\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"sooinkim\"\n    },\n    content: \"첫 번째 게시글 #next.js #coding\",\n    Images: [{\n      id: shortid.generate(),\n      src: 'https://i.pinimg.com/564x/09/43/f1/0943f1f3a3badf9b03b19e01f84e6810.jpg'\n    }, {\n      src: 'https://i.pinimg.com/236x/08/fb/db/08fbdbb51fdf1148ce6a67d2fe6c22f2.jpg'\n    }, {\n      src: 'https://i.pinimg.com/236x/00/8e/35/008e3564d0892d94a5e34a980b25ef9b.jpg'\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: \"fashion\"\n      },\n      content: \"첫번째 룩이 가장 마음에 들어요!\"\n    }, {\n      User: {\n        id: shortid.generate(),\n        nickname: \"strawberry\"\n      },\n      content: \"색감이 예쁘네요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"kimsooin\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"kimsooin\"\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        // dummyPost를 앞에 추가해야지 게시글이 위로 쌓임\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostDone: false,\n        addPostError: action.error\n      });\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: true,\n        removePostDone: false,\n        removePostError: null\n      });\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: false,\n        mainPosts: state.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        }),\n        removePostDone: true\n      });\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: false,\n        removePostDone: false,\n        removePostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/post.js"],"names":["shortid","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","filter","v","postIndex","findIndex","postId","post"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id : 1,\r\n        User : {\r\n            id : 1,\r\n            nickname : \"sooinkim\",\r\n        },\r\n        content : \"첫 번째 게시글 #next.js #coding\",\r\n        Images : [{\r\n            id : shortid.generate(),\r\n            src : 'https://i.pinimg.com/564x/09/43/f1/0943f1f3a3badf9b03b19e01f84e6810.jpg'\r\n        }, {\r\n            src : 'https://i.pinimg.com/236x/08/fb/db/08fbdbb51fdf1148ce6a67d2fe6c22f2.jpg'\r\n        }, {\r\n            src : 'https://i.pinimg.com/236x/00/8e/35/008e3564d0892d94a5e34a980b25ef9b.jpg'\r\n        }],\r\n        Comments : [ {\r\n            id : shortid.generate(),\r\n            User : {\r\n                id : shortid.generate(),\r\n                nickname : \"fashion\",\r\n            },\r\n            content : \"첫번째 룩이 가장 마음에 들어요!\"\r\n        }, {\r\n            User : {\r\n                id : shortid.generate(),\r\n                nickname : \"strawberry\"\r\n            },\r\n            content : \"색감이 예쁘네요~\"\r\n        }]\r\n    }],\r\n    imagePaths : [],\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n    removePostLoading : false,\r\n    removePostDone : false,\r\n    removePostError : null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost = (data) => ( {\r\n    id : data.id,\r\n    content : data.content,\r\n    User : {\r\n        id : 1,\r\n        nickname : \"kimsooin\"\r\n    },\r\n    Images : [],\r\n    Comments : [],\r\n});\r\n\r\nconst dummyComment = (data) => ( {\r\n    id : data.id,\r\n    content : data.content,\r\n    User : {\r\n        id : 1,\r\n        nickname : \"kimsooin\"\r\n    },\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST : \r\n            return {\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null\r\n            }\r\n        case ADD_POST_SUCCESS :\r\n            return {\r\n                ...state,\r\n                addPostLoading : false,\r\n                mainPosts : [dummyPost(action.data), ...state.mainPosts], // dummyPost를 앞에 추가해야지 게시글이 위로 쌓임\r\n                addPostDone : true,\r\n            }\r\n        case ADD_POST_FAILURE : \r\n            return {\r\n                ...state,\r\n                addPostLoading : false,\r\n                addPostDone : false,\r\n                addPostError : action.error,\r\n            }\r\n        case REMOVE_POST_REQUEST : \r\n            return {\r\n                ...state,\r\n                removePostLoading : true,\r\n                removePostDone : false,\r\n                removePostError : null\r\n            }\r\n        case REMOVE_POST_SUCCESS :\r\n            return {\r\n                ...state,\r\n                removePostLoading : false,\r\n                mainPosts : state.mainPosts.filter((v) => v.id !== action.data),\r\n                removePostDone : true,\r\n            }\r\n        case REMOVE_POST_FAILURE : \r\n            return {\r\n                ...state,\r\n                removePostLoading : false,\r\n                removePostDone : false,\r\n                removePostError : action.error,\r\n            }\r\n        case ADD_COMMENT_REQUEST : \r\n            return {\r\n                ...state,\r\n                addCommentLoading : true,\r\n                addCommentDone : false,\r\n                addCommentError : null\r\n            }\r\n        case ADD_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = {...state.mainPosts[postIndex]};\r\n            post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                addCommentLoading : false,\r\n                addCommentDone : true,\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE : \r\n            return {\r\n                ...state,\r\n                addCommentLoading : false,\r\n                addCommentDone : false,\r\n                addCommentError : action.error,\r\n            }\r\n        \r\n        default :\r\n        return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortid from \"shortid\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"sooinkim\"\n    },\n    content: \"첫 번째 게시글 #next.js #coding\",\n    Images: [{\n      src: 'https://i.pinimg.com/564x/09/43/f1/0943f1f3a3badf9b03b19e01f84e6810.jpg'\n    }, {\n      src: 'https://i.pinimg.com/236x/08/fb/db/08fbdbb51fdf1148ce6a67d2fe6c22f2.jpg'\n    }, {\n      src: 'https://i.pinimg.com/236x/00/8e/35/008e3564d0892d94a5e34a980b25ef9b.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: \"fashion\"\n      },\n      content: \"첫번째 룩이 가장 마음에 들어요!\"\n    }, {\n      User: {\n        nickname: \"strawberry\"\n      },\n      content: \"색감이 예쁘네요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"kimsooin\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        // dummyPost를 앞에 추가해야지 게시글이 위로 쌓임\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostDone: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Comments = [dummyPost, ...post.Comments];\n      post.Comments = post.Comments.slice();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/post.js"],"names":["shortid","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","generate","reducer","state","action","error","postIndex","findIndex","v","postId","post","slice"],"mappings":"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","sourcesContent":["import shortid from \"shortid\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [{\r\n        id : 1,\r\n        User : {\r\n            id : 1,\r\n            nickname : \"sooinkim\",\r\n        },\r\n        content : \"첫 번째 게시글 #next.js #coding\",\r\n        Images : [{\r\n            src : 'https://i.pinimg.com/564x/09/43/f1/0943f1f3a3badf9b03b19e01f84e6810.jpg'\r\n        }, {\r\n            src : 'https://i.pinimg.com/236x/08/fb/db/08fbdbb51fdf1148ce6a67d2fe6c22f2.jpg'\r\n        }, {\r\n            src : 'https://i.pinimg.com/236x/00/8e/35/008e3564d0892d94a5e34a980b25ef9b.jpg'\r\n        }],\r\n        Comments : [ {\r\n            User : {\r\n                nickname : \"fashion\",\r\n            },\r\n            content : \"첫번째 룩이 가장 마음에 들어요!\"\r\n        }, {\r\n            User : {\r\n                nickname : \"strawberry\"\r\n            },\r\n            content : \"색감이 예쁘네요~\"\r\n        }]\r\n    }],\r\n    imagePaths : [],\r\n    addPostLoading : false,\r\n    addPostDone : false,\r\n    addPostError : null,\r\n    addCommentLoading : false,\r\n    addCommentDone : false,\r\n    addCommentError : null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost = (data) => ( {\r\n    id : shortid.generate(),\r\n    content : data,\r\n    User : {\r\n        id : 1,\r\n        nickname : \"kimsooin\"\r\n    },\r\n    Images : [],\r\n    Comments : [],\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST : \r\n            return {\r\n                ...state,\r\n                addPostLoading : true,\r\n                addPostDone : false,\r\n                addPostError : null\r\n            }\r\n        case ADD_POST_SUCCESS :\r\n            return {\r\n                ...state,\r\n                addPostLoading : false,\r\n                mainPosts : [dummyPost(action.data), ...state.mainPosts], // dummyPost를 앞에 추가해야지 게시글이 위로 쌓임\r\n                addPostDone : true,\r\n            }\r\n        case ADD_POST_FAILURE : \r\n            return {\r\n                ...state,\r\n                addPostLoading : false,\r\n                addPostDone : false,\r\n                addPostError : action.error,\r\n            }\r\n        case ADD_COMMENT_REQUEST : \r\n            return {\r\n                ...state,\r\n                addCommentLoading : true,\r\n                addCommentDone : false,\r\n                addCommentError : null\r\n            }\r\n        case ADD_COMMENT_SUCCESS :\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [dummyPost,...post.Comments];\r\n            post.Comments = post.Comments.slice();\r\n            return {\r\n                ...state,\r\n                addCommentLoading : false,\r\n                addCommentDone : true,\r\n            }\r\n        case ADD_COMMENT_FAILURE : \r\n            return {\r\n                ...state,\r\n                addCommentLoading : false,\r\n                addCommentDone : false,\r\n                addCommentError : action.error,\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
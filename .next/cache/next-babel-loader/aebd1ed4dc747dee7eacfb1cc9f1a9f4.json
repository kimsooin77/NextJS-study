{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from \"redux\";\nvar initialState = {\n  user: {},\n  post: {}\n};\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","initialState","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAMC,YAAY,GAAI;AAClBH,EAAAA,IAAI,EAAG,EADW;AAIlBC,EAAAA,IAAI,EAAG;AAJW,CAAtB;AAWA,IAAMG,WAAW,GAAGF,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAAI,iBAAkC;AAAA,QAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,QAAXI,MAAW;;AACvC,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKT,OAAL;AACIU,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AAEJ;AACI,eAAOL,KAAP;AANR;AAQH,GAV+B;AAWhCN,EAAAA,IAAI,EAAJA,IAXgC;AAYhCC,EAAAA,IAAI,EAAJA;AAZgC,CAAD,CAAnC;AAeA,eAAeG,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nimport user from './user';\r\nimport post from './post';\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst initialState  = {\r\n    user : {\r\n        \r\n    },\r\n    post : {\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    index :  (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case HYDRATE : \r\n                console.log('HYDRATE', action);\r\n                return { ...state, ...action.payload};\r\n            \r\n            default :\r\n                return state;\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
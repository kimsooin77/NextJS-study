{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport propTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpend,\n    1: setCommentFormOpend\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpend(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"eb2f96\",\n      key: \"heart\",\n      onclick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onclick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onclick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 41\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), commentFormOpend && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"\\uB313\\uAE00\\uBD80\\uBD84\"));\n};\n\nPostCard.propTypes = {\n  post: propTypes.shape({\n    id: propTypes.number,\n    User: propTypes.object,\n    content: propTypes.string,\n    createdAt: propTypes.object,\n    Comments: propTypes.arrayOf(propTypes.object),\n    Images: propTypes.arrayOf(propTypes.object)\n  }).isRequired\n};\nexport default PostCard; // 배열 안에서 JSX들을 넣을때는 key를 붙여야함.\n// propTypes 안에 object 안에 속성들을 다 표기 해주고 싶을 때 shape","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","Avatar","Button","Card","Popover","React","useCallback","useState","useSelector","propTypes","PostImages","PostCard","post","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Button, Card, Popover } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport propTypes from 'prop-types';\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({post}) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpend, setCommentFormOpend] = useState(false);\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev);\r\n    },[]);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpend((prev) => !prev)\r\n    },[])\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return(\r\n        <div style={{marginBottom : 20}}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked \r\n                        ? <HeartTwoTone twoToneColor=\"eb2f96\" key=\"heart\" onclick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onclick={onToggleLike} />,\r\n                    <MessageOutlined key=\"comment\" onclick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {\r\n                                id && post.User.id === id \r\n                                ? \r\n                                (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                )\r\n                                : \r\n                                <Button>신고</Button>\r\n                            }\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {commentFormOpend && (\r\n                <div>\r\n                    댓글부분\r\n                </div>\r\n            )}\r\n            {/* // <CommentForm />\r\n            // <Comments /> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post : propTypes.shape({\r\n        id : propTypes.number,\r\n        User : propTypes.object,\r\n        content : propTypes.string,\r\n        createdAt : propTypes.object,\r\n        Comments : propTypes.arrayOf(propTypes.object),\r\n        Images : propTypes.arrayOf(propTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n\r\n// 배열 안에서 JSX들을 넣을때는 key를 붙여야함.\r\n// propTypes 안에 object 안에 속성들을 다 표기 해주고 싶을 때 shape"]},"metadata":{},"sourceType":"module"}
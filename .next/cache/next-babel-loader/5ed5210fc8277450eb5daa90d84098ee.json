{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data); // 로그인 요청 보냄\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data); // 로그인 요청 보냄\n}\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data); // 로그인 요청 보냄\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/logout', data);\n}\n\nfunction* follow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data) // 로그인 요청에 대한 결과값을 받아서 변수에 저장\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.reponse.data // 로그인 실패시 결과값 안에 들어있는 data\n\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/api/signup', data);\n}\n\nfunction* signUp() {\n  try {\n    const result = yield call(signUpAPI);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","LOG_IN_FAILURE","LOG_OUT_FAILURE","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","followAPI","data","post","unfollowAPI","logInAPI","logOutAPI","follow","action","type","err","error","reponse","unfollow","logIn","logOut","response","signUpAPI","signUp","result","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, put, takeLatest, delay, call} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS,\r\n    LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST,\r\n    LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/unfollow', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/logout', data)\r\n}\r\n\r\n\r\n\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : action.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : action.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.reponse.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data) // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : action.data,\r\n            // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.reponse.data, // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/api/signup', data)\r\n}\r\n\r\nfunction* signUp() {\r\n    try{\r\n        const result = yield call(signUpAPI);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from '../reducers/user';\n\nfunction loadFollowersAPI(data) {\n  return axios.patch('/user/nickname', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.patch('/user/nickname', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`, data); // 로그인 요청 보냄\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data); // 로그인 요청 보냄\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data); // 로그인 요청에 대한 결과값을 받아서 변수에 저장\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data // 로그인 성공시 결과값 안에 들어있는 data\n\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data // 로그인 실패시 결과값 안에 들어있는 data\n\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data); // daata는 email,password,nickname이 들어있는 객체이다.\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChnageNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChnageNickname), fork(watchLoadMyInfo), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","LOG_IN_FAILURE","LOG_OUT_FAILURE","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","loadFollowersAPI","data","patch","loadFollowers","action","result","type","err","error","response","loadFollowingsAPI","loadFollowings","changeNicknameAPI","nickname","changeNickname","loadMyInfoAPI","get","loadMyInfo","reponse","followAPI","follow","unfollowAPI","delete","unfollow","logInAPI","post","logIn","console","logOutAPI","logOut","signUpAPI","signUp","log","watchLoadFollowers","watchLoadFollowings","watchChnageNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,EAA2CC,IAA3C,QAAsD,oBAAtD;AACA,SACIC,cADJ,EACoBC,eADpB,EACqCC,eADrC,EAEIC,cAFJ,EAEoBC,eAFpB,EAEqCC,eAFrC,EAGIC,cAHJ,EAGoBC,eAHpB,EAGqCC,eAHrC,EAIIC,cAJJ,EAIoBC,cAJpB,EAIoCC,cAJpC,EAKIC,gBALJ,EAKsBC,gBALtB,EAKwCC,gBALxC,EAMIC,oBANJ,EAM0BC,oBAN1B,EAMgDC,oBANhD,EAOIC,uBAPJ,EAO6BC,uBAP7B,EAOsDC,uBAPtD,EAQIC,sBARJ,EAQ4BC,sBAR5B,EAQoDC,sBARpD,EASIC,uBATJ,EAS6BC,uBAT7B,EASsDC,uBATtD,QAUO,kBAVP;;AAaA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,SAAOnC,KAAK,CAACoC,KAAN,CAAY,gBAAZ,EAA8BD,IAA9B,CAAP;AACH;;AAED,UAAUE,aAAV,CAAwBC,MAAxB,EAAgC;AAC5B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAAC4B,gBAAD,EAAmBI,MAAM,CAACH,IAA1B,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGX,sBADD;AAENM,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAW;AACR,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGV,sBADD;AAENY,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAASS,iBAAT,CAA2BT,IAA3B,EAAiC;AAC7B,SAAOnC,KAAK,CAACoC,KAAN,CAAY,gBAAZ,EAA8BD,IAA9B,CAAP;AACH;;AAED,UAAUU,cAAV,CAAyBP,MAAzB,EAAiC;AAC7B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAACsC,iBAAD,EAAoBN,MAAM,CAACH,IAA3B,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGR,uBADD;AAENG,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAW;AACR,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGP,uBADD;AAENS,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAASW,iBAAT,CAA2BX,IAA3B,EAAiC;AAC7B,SAAOnC,KAAK,CAACoC,KAAN,CAAY,gBAAZ,EAA8B;AAACW,IAAAA,QAAQ,EAAGZ;AAAZ,GAA9B,CAAP;AACH;;AAED,UAAUa,cAAV,CAAyBV,MAAzB,EAAiC;AAC7B,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAACwC,iBAAD,EAAoBR,MAAM,CAACH,IAA3B,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGd,uBADD;AAENS,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAMC,OAAMM,GAAN,EAAW;AACR,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGb,uBADD;AAENe,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAASc,aAAT,GAAyB;AACrB,SAAOjD,KAAK,CAACkD,GAAN,CAAU,OAAV,CAAP;AACH;;AAED,UAAUC,UAAV,CAAqBb,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAAC2C,aAAD,EAAgBX,MAAM,CAACH,IAAvB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGjB,oBADD;AAENY,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAMM,GAAN,EAAW;AACT,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGhB,oBADD;AAENkB,MAAAA,KAAK,EAAGD,GAAG,CAACW,OAAJ,CAAYjB;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASkB,SAAT,CAAmBlB,IAAnB,EAAyB;AACrB,SAAOnC,KAAK,CAACoC,KAAN,CAAa,SAAQD,IAAK,SAA1B,CAAP;AACH;;AAED,UAAUmB,MAAV,CAAiBhB,MAAjB,EAAyB;AACrB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAAC+C,SAAD,EAAYf,MAAM,CAACH,IAAnB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGvB,cADD;AAENkB,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAMM,GAAN,EAAW;AACT,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGtB,cADD;AAENwB,MAAAA,KAAK,EAAGD,GAAG,CAACW,OAAJ,CAAYjB;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASoB,WAAT,CAAqBpB,IAArB,EAA2B;AACvB,SAAOnC,KAAK,CAACwD,MAAN,CAAc,SAAQrB,IAAK,SAA3B,EAAqCA,IAArC,CAAP,CADuB,CAC4B;AACtD;;AAGD,UAAUsB,QAAV,CAAmBnB,MAAnB,EAA2B;AACvB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAACiD,WAAD,EAAcjB,MAAM,CAACH,IAArB,CAAzB;AACA,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGpB,gBADD;AAENe,MAAAA,IAAI,EAAGI,MAAM,CAACJ;AAFR,KAAD,CAAT;AAIH,GAND,CAME,OAAMM,GAAN,EAAW;AACT,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGnB,gBADD;AAENqB,MAAAA,KAAK,EAAGD,GAAG,CAACW,OAAJ,CAAYjB;AAFd,KAAD,CAAT;AAIH;AACJ;;AAGD,SAASuB,QAAT,CAAkBvB,IAAlB,EAAwB;AACpB,SAAOnC,KAAK,CAAC2D,IAAN,CAAW,aAAX,EAA0BxB,IAA1B,CAAP,CADoB,CACoB;AAC3C;;AAED,UAAUyB,KAAV,CAAgBtB,MAAhB,EAAwB;AACpB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAACoD,QAAD,EAAWpB,MAAM,CAACH,IAAlB,CAAzB,CADA,CACkD;;AAElD,UAAMhC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGjC,cADD;AAEN4B,MAAAA,IAAI,EAAGI,MAAM,CAACJ,IAFR,CAEc;;AAFd,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMM,GAAN,EAAW;AACToB,IAAAA,OAAO,CAACnB,KAAR,CAAcD,GAAd;AACA,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAG3B,cADD;AAEN6B,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR,IAFf,CAEqB;;AAFrB,KAAD,CAAT;AAIH;AACJ;;AAGD,SAAS2B,SAAT,CAAmB3B,IAAnB,EAAyB;AACrB,SAAOnC,KAAK,CAAC2D,IAAN,CAAW,cAAX,EAA2BxB,IAA3B,CAAP;AACH;;AAGD,UAAU4B,MAAV,GAAmB;AACf,MAAG;AACC,UAAMzD,IAAI,CAACwD,SAAD,CAAV;AACA,UAAM3D,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGhC;AADD,KAAD,CAAT;AAGH,GALD,CAKE,OAAOiC,GAAP,EAAY;AACV,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAG1B,eADD;AAEN4B,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,SAAS6B,SAAT,CAAmB7B,IAAnB,EAAyB;AACrB,SAAOnC,KAAK,CAAC2D,IAAN,CAAW,OAAX,EAAoBxB,IAApB,CAAP,CADqB,CACY;AACpC;;AAED,UAAU8B,MAAV,CAAiB3B,MAAjB,EAAyB;AACrB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMjC,IAAI,CAAC0D,SAAD,EAAY1B,MAAM,CAACH,IAAnB,CAAzB;AACA0B,IAAAA,OAAO,CAACK,GAAR,CAAY3B,MAAZ;AACA,UAAMpC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAG/B;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAOgC,GAAP,EAAY;AACV,UAAMtC,GAAG,CAAC;AACNqC,MAAAA,IAAI,EAAGzB,eADD;AAEN2B,MAAAA,KAAK,EAAGD,GAAG,CAACE,QAAJ,CAAaR;AAFf,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUgC,kBAAV,GAA+B;AAC3B,QAAM/D,UAAU,CAACwB,sBAAD,EAAyBS,aAAzB,CAAhB;AACH;;AACD,UAAU+B,mBAAV,GAAgC;AAC5B,QAAMhE,UAAU,CAAC2B,uBAAD,EAA0Bc,cAA1B,CAAhB;AACH;;AACD,UAAUwB,mBAAV,GAAgC;AAC5B,QAAMjE,UAAU,CAACqB,uBAAD,EAA0BuB,cAA1B,CAAhB;AACH;;AAED,UAAUsB,eAAV,GAA4B;AACxB,QAAMlE,UAAU,CAACkB,oBAAD,EAAuB6B,UAAvB,CAAhB;AACH;;AAED,UAAUoB,WAAV,GAAwB;AACpB,QAAMnE,UAAU,CAACY,cAAD,EAAiBsC,MAAjB,CAAhB;AACH;;AAED,UAAUkB,aAAV,GAA0B;AACtB,QAAMpE,UAAU,CAACe,gBAAD,EAAmBsC,QAAnB,CAAhB;AACH;;AAED,UAAUgB,UAAV,GAAuB;AACnB,QAAMrE,UAAU,CAACM,cAAD,EAAiBkD,KAAjB,CAAhB;AACH;;AAED,UAAUc,WAAV,GAAwB;AACpB,QAAMtE,UAAU,CAACO,eAAD,EAAkBoD,MAAlB,CAAhB;AACH;;AAED,UAAUY,WAAV,GAAwB;AACpB,QAAMvE,UAAU,CAACQ,eAAD,EAAkBqD,MAAlB,CAAhB;AACH;;AAGD,eAAe,UAAUW,QAAV,GAAqB;AAChC,QAAM3E,GAAG,CAAC,CACNC,IAAI,CAACmE,mBAAD,CADE,EAENnE,IAAI,CAACoE,eAAD,CAFE,EAGNpE,IAAI,CAACiE,kBAAD,CAHE,EAINjE,IAAI,CAACkE,mBAAD,CAJE,EAKNlE,IAAI,CAACqE,WAAD,CALE,EAMNrE,IAAI,CAACsE,aAAD,CANE,EAONtE,IAAI,CAACuE,UAAD,CAPE,EAQNvE,IAAI,CAACwE,WAAD,CARE,EASNxE,IAAI,CAACyE,WAAD,CATE,CAAD,CAAT;AAWH","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, put, takeLatest, delay, call} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS,\r\n    LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST,\r\n    LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, \r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE\r\n} from '../reducers/user';\r\n\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.patch('/user/nickname', data)\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.patch('/user/nickname', data)\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', {nickname : data})\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type : CHANGE_NICKNAME_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : CHANGE_NICKNAME_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI, action.data)\r\n        yield put({\r\n            type : LOAD_MY_INFO_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_MY_INFO_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`); \r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`, data); // 로그인 요청 보냄\r\n}\r\n\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.reponse.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data); // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        \r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : result.data, // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data, // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/user/logout', data)\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data) // daata는 email,password,nickname이 들어있는 객체이다.\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChnageNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChnageNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
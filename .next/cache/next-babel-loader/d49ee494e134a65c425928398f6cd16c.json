{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files); // 선택했던 이미지들에 대한 정보들 확인\n\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      // 유사배열 객체를 돌면서 이미지를 넣어줌\n      imageFormData.append('image', f); // router/post에 배열도는 'image'와 일치해야함\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.input.click();\n  }, [imageInput.current]);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uB8E9\\uC774 \\uC81C\\uC77C \\uB9C8\\uC74C\\uC5D0 \\uB4DC\\uC2DC\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useRef","useDispatch","useSelector","useInput","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","PostForm","imagePaths","addPostDone","state","post","dispatch","imageInput","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","onChangeImages","e","console","log","target","files","imageFormData","call","f","onClickImageUpload","current","input","click","onRemoveImage","index","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\"\r\nimport React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n    const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, onChangeText, setText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone) {\r\n            setText('');\r\n        }\r\n    },[addPostDone]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if(!text || !text.trim()) {\r\n            return alert('게시글을 작성하세요.')\r\n        }\r\n        const formData = new FormData();\r\n        imagePaths.forEach((p) => {\r\n            formData.append('image', p); \r\n        });\r\n        formData.append('content', text)\r\n        return dispatch({\r\n            type : ADD_POST_REQUEST,\r\n            data : formData\r\n        });\r\n    },[text, imagePaths]);\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('images', e.target.files); // 선택했던 이미지들에 대한 정보들 확인\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => { // 유사배열 객체를 돌면서 이미지를 넣어줌\r\n            imageFormData.append('image', f); // router/post에 배열도는 'image'와 일치해야함\r\n        });\r\n        dispatch({\r\n            type : UPLOAD_IMAGES_REQUEST,\r\n            data : imageFormData,\r\n        })\r\n    },[])\r\n    \r\n    \r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.input.click();\r\n    },[imageInput.current]);\r\n\r\n    const onRemoveImage = useCallback((index) => () => {\r\n        dispatch({\r\n            type : REMOVE_IMAGE,\r\n            data : index,\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <Form style={{margin : '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text} \r\n            onChange={onChangeText} \r\n            maxLength={140} \r\n            placeholder=\"어떤 룩이 제일 마음에 드시나요?\"\r\n            />\r\n            <div>\r\n                <Input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float : \"right\"}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v, i) => (\r\n                    <div key={v} style={{display : \"inline-block\"}}>\r\n                        <img src={`http://localhost:3065/${v}`} style={{width : \"200px\"}} alt={v} />\r\n                        <div>\r\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
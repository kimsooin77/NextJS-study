{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// post/[id].js\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/pages/post/[id].js"],"names":["useRouter","useSelector","AppLayout","PostCard","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","Post","router","id","query","singlePost","state","post","getServerSideProps","wrapper","store","req","params","cookie","headers","axios","defaults","Cookie","dispatch","type","data","END","sagaTask","toPromise"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAQD,MAAM,CAACE,KAArB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AACA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CATD;;AAWA,OAAO,MAAMG,kBAAkB,GAAGC,OAAO,CAACD,kBAAR,CAA4BE,KAAD,IAAW,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA2B;AAC/F,QAAMC,MAAM,GAAGF,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAE,EAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,GAAG,IAAIE,MAAX,EAAmB;AACjBE,IAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgCJ,MAAhC;AACD;;AACDH,EAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAEpB;AADO,GAAf;AAGAW,EAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAEnB,iBADO;AAEboB,IAAAA,IAAI,EAAER,MAAM,CAACT;AAFA,GAAf;AAIAO,EAAAA,KAAK,CAACQ,QAAN,CAAeG,GAAf;AACA,QAAMX,KAAK,CAACY,QAAN,CAAeC,SAAf,EAAN;AACD,CAf+B,CAA3B;AAiBP,eAAetB,IAAf","sourcesContent":["// post/[id].js\r\nimport { useRouter } from \"next/router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\r\nimport {LOAD_POST_REQUEST} from '../../reducers/user';\r\n\r\nconst Post = () => {\r\n    const router = useRouter();\r\n    const {id}  = router.query;\r\n    const {singlePost} = useSelector((state) => state.post);\r\n    return (\r\n        <AppLayout>\r\n            <PostCard post={singlePost} />\r\n        </AppLayout>\r\n    )\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\r\n    const cookie = req ? req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: params.id,\r\n    });\r\n    store.dispatch(END);\r\n    await store.sagaTask.toPromise();\r\n  });\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}
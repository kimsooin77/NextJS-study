{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper; // action을 만들면 history(기록)으로 남는다.\n// history가 쌓이면 메모리도 많이 잡아먹고 중앙데이터들이 어떻게 변하는지 보이기때문에\n// 보안에도 취약할 수가 있다. 따라 첫번째는 배포용(devtools 연결X) 두번째는 개발용(devtools 연결O)\n// compose(applyMiddleware([]))\n// composeWithDevTools(applyMiddleware([]))","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACfL,OAAO,CAACD,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CADQ,GAEfH,mBAAmB,CAACF,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUG,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CAPD;;AASA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf,C,CAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug : process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;\r\n\r\n// action을 만들면 history(기록)으로 남는다.\r\n\r\n// history가 쌓이면 메모리도 많이 잡아먹고 중앙데이터들이 어떻게 변하는지 보이기때문에\r\n// 보안에도 취약할 수가 있다. 따라 첫번째는 배포용(devtools 연결X) 두번째는 개발용(devtools 연결O)\r\n// compose(applyMiddleware([]))\r\n// composeWithDevTools(applyMiddleware([]))"]},"metadata":{},"sourceType":"module"}
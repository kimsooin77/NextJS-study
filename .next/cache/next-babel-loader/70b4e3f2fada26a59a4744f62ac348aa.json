{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (inView && hasMorePost && !loadPostsLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId\n      });\n    }\n  }, [inView, hasMorePost, loadPostsLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 38\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostsLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/pages/index.js"],"names":["React","useEffect","useRef","useInView","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","me","state","user","mainPosts","hasMorePost","loadPostsLoading","post","ref","inView","dispatch","lastId","length","id","type","map","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA;AAAF,MAASN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,MAA+CX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAhE;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,SAAS,EAA/B;AACA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGkB,MAAM,IAAIJ,WAAV,IAAyB,CAACC,gBAA7B,EAA+C;AAAA;;AAC3C,YAAMK,MAAM,iBAAGP,SAAS,CAACA,SAAS,CAACQ,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAGf,kBADF;AAELY,QAAAA;AAFK,OAAD,CAAR;AAIH;AACJ,GARQ,EAQP,CAACF,MAAD,EAASJ,WAAT,EAAsBC,gBAAtB,EAAwCF,SAAxC,CARO,CAAT;AAUA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKG,SAAS,CAACW,GAAV,CAAeR,IAAD,IAAU,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACM,EAApB;AAAwB,IAAA,IAAI,EAAEN,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAFL,EAGI;AAAK,IAAA,GAAG,EAAEF,WAAW,IAAI,CAACC,gBAAhB,GAAmCE,GAAnC,GAAyCQ,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAxBD;;AA0BA,eAAehB,IAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst Home = () => {\r\n    const { me } = useSelector((state) => state.user); \r\n    const { mainPosts, hasMorePost, loadPostsLoading } = useSelector((state) => state.post); \r\n    const [ref, inView] = useInView();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if(inView && hasMorePost && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n            dispatch({\r\n                type : LOAD_POSTS_REQUEST,\r\n                lastId,\r\n            });\r\n        }\r\n    },[inView, hasMorePost, loadPostsLoading, mainPosts]\r\n    );\r\n    return(\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n            <div ref={hasMorePost && !loadPostsLoading ? ref : undefined} />\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n// hashtag/[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport { useInView } from 'react-intersection-observer';\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/AppLayout';\n\nfunction Hashtag() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (inView && hasMorePost && !loadPostsLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: tag\n      });\n    }\n  }, [inView, hasMorePost, loadPostsLoading, mainPosts, tag]);\n  return __jsx(AppLayout, null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c\n  })), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostsLoading ? ref : undefined,\n    style: {\n      height: 10\n    }\n  }));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.tag\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","END","useInView","axios","LOAD_HASHTAG_POSTS_REQUEST","LOAD_POSTS_REQUEST","PostCard","wrapper","LOAD_MY_INFO_REQUEST","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePost","loadPostsLoading","state","post","ref","inView","lastId","length","id","type","data","map","c","undefined","height","getServerSideProps","context","cookie","req","headers","console","log","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["// hashtag/[tag].js\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_REQUEST } from '../../reducers/post';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nfunction Hashtag() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query;\r\n  const { mainPosts, hasMorePost, loadPostsLoading } = useSelector((state) => state.post);\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (inView && hasMorePost && !loadPostsLoading) {\r\n        const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n        dispatch({\r\n          type: LOAD_POSTS_REQUEST,\r\n          lastId,\r\n          data: tag,\r\n        });\r\n      }\r\n    },\r\n    [inView, hasMorePost, loadPostsLoading, mainPosts, tag],\r\n  );\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n      <div ref={hasMorePost && !loadPostsLoading ? ref : undefined} style={{ height: 10 }} />\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  console.log(context);\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}
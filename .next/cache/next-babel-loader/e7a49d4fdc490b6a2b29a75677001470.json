{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, delay, takeLatest, put } from 'redux-saga/effects';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data) \n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.reponse.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/post.js"],"names":["axios","all","fork","delay","takeLatest","put","addPostAPI","data","post","addPost","action","type","err","reponse","watchAddPost","postSaga","watchLogIn","watchLogOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,UAA1B,EAAsCC,GAAtC,QAAgD,oBAAhD;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAG;AADD,KAAD,CAAT;AAGH,GAND,CAME,OAAMC,GAAN,EAAW;AACT,UAAMP,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAG,kBADD;AAENJ,MAAAA,IAAI,EAAGK,GAAG,CAACC,OAAJ,CAAYN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUO,YAAV,GAAyB;AACrB,QAAMV,UAAU,CAAC,kBAAD,EAAqBK,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACc,UAAD,CADE,EAENd,IAAI,CAACe,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, delay, takeLatest, put} from 'redux-saga/effects';\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data) \r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data) \r\n        yield delay(1000);\r\n        yield put({\r\n            type : 'ADD_POST_SUCCESS',\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : 'ADD_POST_FAILURE',\r\n            data : err.reponse.data \r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(\"ADD_POST_REQUEST\", addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
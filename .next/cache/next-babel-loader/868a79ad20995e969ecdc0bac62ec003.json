{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from '../reducers/user';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`, data); // 로그인 요청 보냄\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.reponse.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data); // 로그인 요청 보냄\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data); // 로그인 요청에 대한 결과값을 받아서 변수에 저장\n\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data // 로그인 성공시 결과값 안에 들어있는 data\n\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data // 로그인 실패시 결과값 안에 들어있는 data\n\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data); // daata는 email,password,nickname이 들어있는 객체이다.\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChnageNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChnageNickname), fork(watchLoadMyInfo), fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/user.js"],"names":["axios","all","fork","put","takeLatest","delay","call","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","LOG_IN_FAILURE","LOG_OUT_FAILURE","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","removeFollowerAPI","data","delete","removeFollower","action","result","type","err","error","response","loadFollowersAPI","get","loadFollowers","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","loadMyInfoAPI","loadMyInfo","reponse","followAPI","follow","unfollowAPI","unfollow","logInAPI","post","logIn","console","logOutAPI","logOut","signUpAPI","signUp","log","watchRemoveFollower","watchLoadFollowers","watchLoadFollowings","watchChnageNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, put, takeLatest, delay, call} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS,\r\n    LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST,\r\n    LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, \r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE\r\n} from '../reducers/user';\r\n\r\n\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`)\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({\r\n            type : REMOVE_FOLLOWER_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : REMOVE_FOLLOWER_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data)\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data)\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', {nickname : data})\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type : CHANGE_NICKNAME_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : CHANGE_NICKNAME_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI)\r\n        yield put({\r\n            type : LOAD_MY_INFO_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_MY_INFO_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`); \r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`, data); // 로그인 요청 보냄\r\n}\r\n\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.reponse.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data); // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        \r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : result.data, // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data, // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/user/logout', data)\r\n}\r\n\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data) // daata는 email,password,nickname이 들어있는 객체이다.\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChnageNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChnageNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchRemoveFollower),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
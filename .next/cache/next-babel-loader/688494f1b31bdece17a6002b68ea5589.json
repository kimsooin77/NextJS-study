{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { all, fork, put, takeLatest, delay, call } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data); // 로그인 요청 보냄\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data); // 로그인 요청 보냄\n}\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data); // 로그인 요청 보냄\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/logout', data);\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/api/signup', data);\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context.t0.reponse.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction unfollow(action) {\n  return _regeneratorRuntime.wrap(function unfollow$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context2.t0.reponse.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context3.t0.reponse.data // 로그인 실패시 결과값 안에 들어있는 data\n\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction signUp() {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(signUpAPI);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return delay(1000);\n\n        case 6:\n          _context5.next = 8;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/user.js"],"names":["follow","unfollow","logIn","logOut","signUp","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga","axios","all","fork","put","takeLatest","delay","call","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","SIGN_UP_SUCCESS","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","LOG_IN_FAILURE","LOG_OUT_FAILURE","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","followAPI","data","post","unfollowAPI","logInAPI","logOutAPI","signUpAPI","action","type","error","reponse","response","result"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {all, fork, put, takeLatest, delay, call} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS,\r\n    LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST,\r\n    LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/unfollow', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/logout', data)\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/api/signup', data)\r\n}\r\n\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : action.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.reponse.data, \r\n        });\r\n    }\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : action.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.reponse.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data) // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : action.data,\r\n            // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.reponse.data, // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp() {\r\n    try{\r\n        const result = yield call(signUpAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
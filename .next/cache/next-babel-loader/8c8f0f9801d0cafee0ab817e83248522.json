{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useinput from \"../hooks/useinput\";\nimport { addPost } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useinput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.input.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uB8E9\\uC774 \\uC81C\\uC77C \\uB9C8\\uC74C\\uC5D0 \\uB4DC\\uC2DC\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","useinput","addPost","PostForm","imagePaths","addPostDone","state","post","dispatch","imageInput","text","onChangeText","setText","onSubmit","onClickImageUpload","current","input","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\"\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { addPost } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n    const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, onChangeText, setText] = useinput('');\r\n\r\n    useEffect(() => {\r\n        if(addPostDone) {\r\n            setText('');\r\n        }\r\n    },[addPostDone]);\r\n\r\n    \r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));\r\n    },[text]);\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.input.click();\r\n    },[imageInput.current]);\r\n\r\n    return (\r\n        <Form style={{margin : '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n            value={text} \r\n            onChange={onChangeText} \r\n            maxLength={140} \r\n            placeholder=\"어떤 룩이 제일 마음에 드시나요?\"\r\n            />\r\n            <div>\r\n                <Input type=\"file\" name=\"image\" multiple hidden ref={imageInput} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float : \"right\"}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{display : \"inline-block\"}}>\r\n                        <img src={v} style={{width : \"200px\"}} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
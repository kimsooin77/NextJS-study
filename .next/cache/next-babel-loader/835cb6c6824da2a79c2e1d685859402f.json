{"ast":null,"code":"import { Result } from 'antd';\nimport axios, { Axios } from 'axios';\nimport { all, fork, put } from 'redux-saga/effects';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data); // 로그인 요청 보냄\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data) // 로그인 요청에 대한 결과값을 받아서 변수에 저장\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.reponse.data // 로그인 실패시 결과값 안에 들어있는 data\n\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT-SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'L0G_OUT_FAILURE'\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/sagas/user.js"],"names":["Result","axios","Axios","all","fork","put","logInAPI","data","post","logOutAPI","logIn","action","delay","type","err","reponse","logOut","watchLogIn","takeLatest","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,QAA6B,oBAA7B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAON,KAAK,CAACO,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP,CADoB,CACmB;AAC1C;;AAED,SAASE,SAAT,GAAqB;AACjB,SAAOR,KAAK,CAACO,IAAN,CAAW,aAAX,CAAP;AACH;;AAGD,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAG,gBADD;AAENN,MAAAA,IAAI,EAAGI,MAAM,CAACJ,IAFR,CAGN;;AAHM,KAAD,CAAT;AAKH,GARD,CAQE,OAAMO,GAAN,EAAW;AACT,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAG,gBADD;AAENN,MAAAA,IAAI,EAAGO,GAAG,CAACC,OAAJ,CAAYR,IAFb,CAEkB;;AAFlB,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,MAAV,GAAmB;AACf,MAAG;AACC,UAAMJ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMP,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAG;AADD,KAAD,CAAT;AAGH,GALD,CAKE,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAG;AADD,KAAD,CAAT;AAGH;AAEJ;;AAED,UAAUI,UAAV,GAAuB;AACnB,QAAMC,UAAU,CAAC,gBAAD,EAAmBR,KAAnB,CAAhB;AACH;;AAED,UAAUS,WAAV,GAAwB;AACpB,QAAMD,UAAU,CAAC,iBAAD,EAAoBF,MAApB,CAAhB;AACH;;AAGD,eAAe,UAAUI,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACa,UAAD,CADE,EAENb,IAAI,CAACe,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { Result } from 'antd';\r\nimport axios, { Axios } from 'axios';\r\nimport {all, fork, put} from 'redux-saga/effects';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data) // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        yield delay(1000);\r\n        yield put({\r\n            type : 'LOG_IN_SUCCESS',\r\n            data : action.data,\r\n            // data : result.data // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : 'LOG_IN_FAILURE',\r\n            data : err.reponse.data // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type : 'LOG_OUT-SUCCESS',\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : 'L0G_OUT_FAILURE',\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(\"LOG_IN_REQUEST\", logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}
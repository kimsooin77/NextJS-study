{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      console.log(window.scrollY, document.document.clientHeight, document.documentElement.scrollHeight); // 스크롤을 끝까지 내렸을 시 로딩할 포스트가 더 있다면 load_post_request dispatch\n\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }\n    });\n  }));\n};\n\n_s(Home, \"YKBuZKkTXB6SlbSrLreq1odn8kE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","state","user","me","post","mainPosts","hasMorePosts","dispatch","type","onScroll","console","log","window","scrollY","document","clientHeight","documentElement","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,qBAAeL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,sBAAoCR,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAA/C;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,YAAnB,iBAAmBA,YAAnB;;AAEA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AAEZc,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAGT;AADF,KAAD,CAAR;AAGH,GALQ,EAKP,EALO,CAAT;AAQAN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASgB,QAAT,GAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACA,QAAT,CAAkBC,YAA9C,EAA4DD,QAAQ,CAACE,eAAT,CAAyBC,YAArF,EADgB,CAEhB;;AACA,UAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACE,eAAT,CAAyBD,YAA1C,KAA2DD,QAAQ,CAACE,eAAT,CAAyBC,YAAzB,GAAwC,GAAtG,EAA2G;AACvG,YAAGX,YAAH,EAAiB;AACbC,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAGT;AADF,WAAD,CAAR;AAGH;AACJ;AACJ;;AACDa,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,YAAM;AACTG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACH,KAFD;AAGH,GAhBQ,EAgBP,CAACH,YAAD,CAhBO,CAAT;AAiBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEKE,SAAS,CAACe,GAAV,CAAc,UAAChB,IAAD;AAAA,WAAU,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACiB,EAApB;AAAwB,MAAA,IAAI,EAAEjB,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAd,CAFL,CADJ;AAMH,CArCD;;GAAMJ,I;UACaL,W,EACqBA,W,EAEnBD,W;;;KAJfM,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst Home = () => {\r\n    const { me } = useSelector((state) => state.user); \r\n    const { mainPosts, hasMorePosts } = useSelector((state) => state.post); \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch({\r\n            type : LOAD_POSTS_REQUEST,\r\n        });\r\n    },[]);\r\n\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.document.clientHeight, document.documentElement.scrollHeight)\r\n            // 스크롤을 끝까지 내렸을 시 로딩할 포스트가 더 있다면 load_post_request dispatch\r\n            if(window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\r\n                if(hasMorePosts) {\r\n                    dispatch({\r\n                        type : LOAD_POSTS_REQUEST,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll );\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", onScroll);\r\n        }\r\n    },[hasMorePosts]);\r\n    return(\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
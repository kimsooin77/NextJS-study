{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from \"redux\"; // ssr을 위하여 index 리듀서 추가(HTDRATE)\n\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return action.payload;\n\n      default:\n        {\n          var combinedReducer = combineReducers({\n            user: user,\n            post: post\n          });\n          return combinedReducer(state, action);\n        }\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","rootReducer","index","state","action","type","console","log","payload","combinedReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAGA;;AACA,IAAMC,WAAW,GAAGD,eAAe,CAAC;AAChCE,EAAAA,KAAK,EAAI,iBAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKR,OAAL;AACIS,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,eAAOA,MAAM,CAACI,OAAd;;AAEJ;AAAU;AACN,cAAMC,eAAe,GAAGT,eAAe,CAAC;AACpCF,YAAAA,IAAI,EAAJA,IADoC;AAEpCC,YAAAA,IAAI,EAAJA;AAFoC,WAAD,CAAvC;AAIA,iBAAOU,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;AACH;AAXL;AAaH,GAf+B;AAgBhCN,EAAAA,IAAI,EAAJA,IAhBgC;AAiBhCC,EAAAA,IAAI,EAAJA;AAjBgC,CAAD,CAAnC;AAoBA,eAAeE,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nimport user from './user';\r\nimport post from './post';\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\n// ssr을 위하여 index 리듀서 추가(HTDRATE)\r\nconst rootReducer = combineReducers({\r\n    index :  (state = {}, action) => {\r\n        switch (action.type) {\r\n            case HYDRATE : \r\n                console.log('HYDRATE', action);\r\n                return action.payload;\r\n            \r\n            default : {\r\n                const combinedReducer = combineReducers({\r\n                    user,\r\n                    post,\r\n                });\r\n                return combinedReducer(state, action);\r\n            }\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
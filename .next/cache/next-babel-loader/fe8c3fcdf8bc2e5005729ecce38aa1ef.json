{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","rootReducer","state","action","type","console","log","payload","isLoggedIn","data"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAI;AAClBC,EAAAA,IAAI,EAAG,EADW;AAIlBC,EAAAA,IAAI,EAAG;AAJW,CAAtB;;AAWA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAL;AACIQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,6CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACJ,SAAK,QAAL;AACI,6CACOL,KADP;AAEIH,QAAAA,IAAI,kCACGG,KAAK,CAACH,IADT;AAEAS,UAAAA,UAAU,EAAG,IAFb;AAGAT,UAAAA,IAAI,EAAGI,MAAM,CAACM;AAHd;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOP,KADP;AAEIH,QAAAA,IAAI,kCACGG,KAAK,CAACH,IADT;AAEAS,UAAAA,UAAU,EAAG,KAFb;AAGAT,UAAAA,IAAI,EAAG;AAHP;AAFR;;AAQJ;AACI,aAAOG,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState  = {\r\n    user : {\r\n        \r\n    },\r\n    post : {\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE : \r\n            console.log('HYDRATE', action);\r\n            return { ...state, ...action.payload};\r\n        case 'LOG_IN':\r\n            return {\r\n                ...state,\r\n                user : {\r\n                    ...state.user,\r\n                    isLoggedIn : true,\r\n                    user : action.data,\r\n                }\r\n            };\r\n        case 'LOG_OUT' : \r\n            return {\r\n                ...state,\r\n                user : {\r\n                    ...state.user,\r\n                    isLoggedIn : false,\r\n                    user : null,\r\n                }\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}
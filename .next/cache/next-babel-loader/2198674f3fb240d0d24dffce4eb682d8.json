{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  logInDone: false,\n  // 로그인 시도중\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutFailure: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpFailure: null,\n  me: null,\n  signUpDate: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLogginIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLogginIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'sooinkim'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLogginOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLogginOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLogginOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutFailure","signUpLoading","signUpDone","signUpFailure","me","signUpDate","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","isLogginIn","isLoggedIn","nickname","isLogginOut"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAG,KADS;AAExBC,EAAAA,SAAS,EAAG,KAFY;AAEL;AACnBC,EAAAA,UAAU,EAAG,IAHW;AAIxBC,EAAAA,aAAa,EAAG,KAJQ;AAID;AACvBC,EAAAA,UAAU,EAAG,KALW;AAMxBC,EAAAA,aAAa,EAAG,IANQ;AAOxBC,EAAAA,aAAa,EAAG,KAPQ;AAOD;AACvBC,EAAAA,UAAU,EAAG,KARW;AASxBC,EAAAA,aAAa,EAAG,IATQ;AAUxBC,EAAAA,EAAE,EAAG,IAVmB;AAWxBC,EAAAA,UAAU,EAAG,EAXW;AAYxBC,EAAAA,SAAS,EAAG;AAZY,CAArB;AAeP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAGjB,cADJ;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIF,IAAD,IAAU;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAGd,eADJ;AAEHa,IAAAA;AAFG,GAAP;AAIH,CALM;;AAOP,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGjC,YAAT,EAAuBkC,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKjB,cAAL;AACI,6CACOoB,KADP;AAEIE,QAAAA,UAAU,EAAG;AAFjB;;AAIJ,SAAKrB,cAAL;AACI,6CACOmB,KADP;AAEIE,QAAAA,UAAU,EAAG,KAFjB;AAGIC,QAAAA,UAAU,EAAG,IAHjB;AAII1B,QAAAA,EAAE,kCAAOwB,MAAM,CAACL,IAAd;AAAoBQ,UAAAA,QAAQ,EAAG;AAA/B;AAJN;;AAOJ,SAAKtB,cAAL;AACI,6CACOkB,KADP;AAEIG,QAAAA,UAAU,EAAG,KAFjB;AAGIA,QAAAA,UAAU,EAAG;AAHjB;;AAKJ,SAAKpB,eAAL;AACI,6CACOiB,KADP;AAEIK,QAAAA,WAAW,EAAG;AAFlB;;AAIJ,SAAKrB,eAAL;AACI,6CACOgB,KADP;AAEIK,QAAAA,WAAW,EAAG,KAFlB;AAGIF,QAAAA,UAAU,EAAG,KAHjB;AAII1B,QAAAA,EAAE,EAAG;AAJT;;AAMJ,SAAKQ,eAAL;AACI,6CACOe,KADP;AAEIK,QAAAA,WAAW,EAAG;AAFlB;;AAIJ;AACA,aAAOL,KAAP;AAtCJ;AA0CH,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    logInLoading : false,\r\n    logInDone : false, // 로그인 시도중\r\n    logInError : null,\r\n    logOutLoading : false, // 로그아웃 시도중\r\n    logOutDone : false,\r\n    logOutFailure : null,\r\n    signUpLoading : false, // 회원가입 시도중\r\n    signUpDone : false,\r\n    signUpFailure : null,\r\n    me : null,\r\n    signUpDate : {},\r\n    loginData : {},\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type : LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type : LOG_OUT_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLogginIn : true,\r\n            };\r\n        case LOG_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLogginIn : false,\r\n                isLoggedIn : true,\r\n                me : {...action.data, nickname : 'sooinkim'},\r\n                \r\n            };\r\n        case LOG_IN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                isLoggedIn : false,\r\n            };\r\n        case LOG_OUT_REQUEST : \r\n            return {\r\n                ...state,\r\n                isLogginOut : true,\r\n            }\r\n        case LOG_OUT_SUCCESS : \r\n            return {\r\n                ...state,\r\n                isLogginOut : false,\r\n                isLoggedIn : false,\r\n                me : null,\r\n            }\r\n        case LOG_OUT_FAILURE : \r\n            return {\r\n                ...state,\r\n                isLogginOut : false,\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n    \r\n   \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
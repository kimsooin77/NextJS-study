{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kimsooin\\\\Desktop\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\\\uACF5\\uBD80\\uAE30\\uB85D\\\\22.04 \\uACF5\\uBD80\\uAE30\\uB85D\\\\next-study\\\\front\\\\components\\\\imagesZoom\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nvar Overlay = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    position : fixed;\\n    z-index : 5000;\\n    top : 0;\\n    left : 0;\\n    right : 0;\\n    bottom : 0;\\n\"])));\n_c = Overlay;\nvar Header = styled.header(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    height: 44px;\\n    background : white;\\n    positon : relative;\\n    padding : 0;\\n    text-align : center;\\n\\n    & h1 {\\n        margin : 0;\\n        font-size : 17px;\\n        color : #333;\\n        line-height : 44px;\\n    }\\n\"])));\n_c2 = Header;\nvar CloseBtn = styled(CloseOutlined)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    position : absolute;\\n    right : 0;\\n    top : 0;\\n    padding : 15px;\\n    line-height : 14px;\\n    cursor : pointer;\\n\"])));\n_c3 = CloseBtn;\nvar SlickWrapper = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    height : calc(100% - 44px);\\n    background : #090909;\\n\"])));\n_c4 = SlickWrapper;\nvar ImgWrapper = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n    padding : 32px;\\n    text-align : center;\\n\\n    &img {\\n        margin : 0 auto;\\n        max-height : 750px;\\n    }\\n\"])));\n_c5 = ImgWrapper;\nvar Indicator = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n    text-align : center;\\n\\n    &>div {\\n        width : 75px;\\n        height : 30px;\\n        line-height : 30px;\\n        border-radius : 15px;\\n        background : #313131;\\n        display : inline-block;\\n        text-align : center;\\n        color : white;\\n        font-size : 15px;\\n    }\\n\"])));\n_c6 = Indicator;\nvar Global = createGlobalStyle(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n    .slick-slide {\\n        display : inline-block;\\n    }\\n    .ant-card-cover {\\n        transform : none !important;\\n    }\\n\"])));\n_c7 = Global;\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return __jsx(Overlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, {\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, images.map(function (v) {\n    return __jsx(ImgWrapper, {\n      key: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: v.src,\n      alt: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }));\n  })), __jsx(Indicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, currentSlide + 1, ' ', \"/\", images.length))));\n};\n\n_s(ImagesZoom, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n\n_c8 = ImagesZoom;\nImagesZoom.propTypes = {\n  images: propTypes.arrayOf(propTypes.shape({\n    src: propTypes.string\n  })).isRequired,\n  onClose: propTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"CloseBtn\");\n$RefreshReg$(_c4, \"SlickWrapper\");\n$RefreshReg$(_c5, \"ImgWrapper\");\n$RefreshReg$(_c6, \"Indicator\");\n$RefreshReg$(_c7, \"Global\");\n$RefreshReg$(_c8, \"ImagesZoom\");","map":{"version":3,"sources":["C:/Users/kimsooin/Desktop/공부기록/공부기록/22.04 공부기록/next-study/front/components/imagesZoom/index.js"],"names":["React","useState","propTypes","Slick","styled","createGlobalStyle","CloseOutlined","Overlay","div","Header","header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nconst Overlay = styled.div`\r\n    position : fixed;\r\n    z-index : 5000;\r\n    top : 0;\r\n    left : 0;\r\n    right : 0;\r\n    bottom : 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 44px;\r\n    background : white;\r\n    positon : relative;\r\n    padding : 0;\r\n    text-align : center;\r\n\r\n    & h1 {\r\n        margin : 0;\r\n        font-size : 17px;\r\n        color : #333;\r\n        line-height : 44px;\r\n    }\r\n`;\r\n\r\nconst CloseBtn = styled(CloseOutlined)`\r\n    position : absolute;\r\n    right : 0;\r\n    top : 0;\r\n    padding : 15px;\r\n    line-height : 14px;\r\n    cursor : pointer;\r\n`;\r\n\r\nconst SlickWrapper = styled.div`\r\n    height : calc(100% - 44px);\r\n    background : #090909;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n    padding : 32px;\r\n    text-align : center;\r\n\r\n    &img {\r\n        margin : 0 auto;\r\n        max-height : 750px;\r\n    }\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n    text-align : center;\r\n\r\n    &>div {\r\n        width : 75px;\r\n        height : 30px;\r\n        line-height : 30px;\r\n        border-radius : 15px;\r\n        background : #313131;\r\n        display : inline-block;\r\n        text-align : center;\r\n        color : white;\r\n        font-size : 15px;\r\n    }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n    .slick-slide {\r\n        display : inline-block;\r\n    }\r\n    .ant-card-cover {\r\n        transform : none !important;\r\n    }\r\n`;\r\n\r\nconst ImagesZoom = ( {images, onClose} ) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    return(\r\n        <Overlay>\r\n            <Global />\r\n            <Header>\r\n                <h1>상세 이미지</h1>\r\n                <CloseBtn onClick={onClose}>X</CloseBtn>\r\n            </Header>\r\n            <SlickWrapper>\r\n                <div>\r\n                    <Slick\r\n                        initialSlide={0}\r\n                        afterChange={(slide) => setCurrentSlide(slide)}\r\n                        infinite\r\n                        arrows={false}\r\n                        slidesToShow={1}\r\n                        slidesToScroll={1}\r\n                    >\r\n                        {images.map((v) => (\r\n                            <ImgWrapper key={v.src}>\r\n                                <img src={v.src} alt={v.src} />\r\n                            </ImgWrapper>\r\n                        ))}\r\n                    </Slick>\r\n                    <Indicator>\r\n                        {currentSlide + 1}\r\n                        {' '}\r\n                        /\r\n                        {images.length}\r\n                    </Indicator>\r\n                </div>\r\n            </SlickWrapper>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images : propTypes.arrayOf(propTypes.shape({\r\n        src : propTypes.string,\r\n    })).isRequired,\r\n    onClose : propTypes.func.isRequired,\r\n}\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}
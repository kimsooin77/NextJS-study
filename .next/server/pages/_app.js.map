{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///external \"shortid\"","webpack:///./reducers/index.js","webpack:///./sagas/post.js","webpack:///./sagas/user.js","webpack:///./config/config.js","webpack:///./sagas/index.js","webpack:///./store/configureStore.js","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///./reducers/post.js","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"axios\""],"names":["App","Component","reportWebVitals","metric","console","log","wrapper","withRedux","rootReducer","state","action","type","HYDRATE","payload","combinedReducer","combineReducers","user","post","retweetAPI","data","axios","retweet","result","call","put","RETWEET_SUCCESS","err","error","RETWEET_FAILURE","response","uploadImagesAPI","uploadImages","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","unlikePostAPI","delete","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","likePostAPI","patch","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","loadPostAPI","get","loadPost","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","loadHashtagPostsAPI","lastId","encodeURIComponent","loadHashtagPosts","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","loadUserPostsAPI","loadUserPosts","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","loadPostsAPI","loadPosts","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","addPostAPI","addPost","ADD_POST_SUCCESS","ADD_POST_TO_ME","id","ADD_POST_FAILURE","removePostAPI","removePost","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchRetweet","takeLatest","RETWEET_REQUEST","watchUploadImages","UPLOAD_IMAGES_REQUEST","watchLoadPost","LOAD_POST_REQUEST","watchLoadUserPosts","LOAD_USER_POSTS_REQUEST","watchLoadPosts","LOAD_POSTS_REQUEST","watchAddPost","ADD_POST_REQUEST","watchRemovePost","REMOVE_POST_REQUEST","watchLikePost","LIKE_POST_REQUEST","watchUnlikePost","UNLIKE_POST_REQUEST","watchLoadHashtagPosts","LOAD_HASHTAG_POSTS_REQUEST","watchAddComment","ADD_COMMENT_REQUEST","postSaga","all","fork","removeFollowerAPI","removeFollower","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","loadFollowersAPI","loadFollowers","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","loadFollowingsAPI","loadFollowings","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","changeNicknameAPI","nickname","changeNickname","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","loadMyInfoAPI","loadMyInfo","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","logInAPI","logIn","LOG_IN_SUCCESS","LOG_IN_FAILURE","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAPI","signUp","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","watchRemoveFollower","REMOVE_FOLLOWER_REQUEST","watchLoadFollowers","LOAD_FOLLOWERS_REQUEST","watchLoadFollowings","LOAD_FOLLOWINGS_REQUEST","watchChnageNickname","CHANGE_NICKNAME_REQUEST","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","watchLoadUser","LOAD_USER_REQUEST","watchFollow","FOLLOW_REQUEST","watchUnfollow","UNFOLLOW_REQUEST","watchLogIn","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","watchSignUp","SIGN_UP_REQUEST","userSaga","backUrl","defaults","baseURL","withCredentials","rootSaga","loggerMiddleware","dispatch","getState","next","configureStore","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","composeWithDevTools","store","createStore","reducer","sagaTask","run","createWrapper","debug","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","userInfo","loginRequestAction","logoutRequestAction","produce","draft","Followers","Followings","push","UserId","filter","v","Posts","unshift","mainPosts","singlePost","imagePaths","hasMorePost","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","REMOVE_IMAGE","i","concat","find","PostId","Likers","length","Comments"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport propTypes from 'prop-types';\r\nimport wrapper from '../store/configureStore';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\nconst App = ( { Component } ) => {\r\n    return(\r\n        <Component />\r\n    )\r\n}\r\n\r\nApp.propTypes = {\r\n    Component : propTypes.elementType.isRequired,\r\n}\r\n\r\nexport function reportWebVitals(metric) {\r\n    console.log(metric);\r\n}\r\n\r\nexport default wrapper.withRedux(App);","module.exports = require(\"redux-saga\");","module.exports = require(\"shortid\");","import { HYDRATE } from 'next-redux-wrapper';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\n\r\n// (이전상태, 액션) => 다음상태\r\n// ssr을 위하여 index 리듀서 추가(HTDRATE)\r\nconst rootReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE : \r\n            console.log('HYDRATE', action);\r\n            return action.payload;\r\n            \r\n        default : {\r\n            const combinedReducer = combineReducers({\r\n                user,\r\n                post,\r\n            });\r\n            return combinedReducer(state, action);\r\n        }\r\n    }\r\n};\r\n\r\nexport default rootReducer;","import axios from 'axios';\r\nimport {all, fork, takeLatest, put, throttle, call} from 'redux-saga/effects';\r\nimport shortid from 'shortid';\r\nimport { \r\n    ADD_POST_REQUEST, ADD_COMMENT_REQUEST, \r\n    ADD_POST_SUCCESS, ADD_COMMENT_SUCCESS, \r\n    ADD_POST_FAILURE, ADD_COMMENT_FAILURE, \r\n    REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, \r\n    REMOVE_POST_FAILURE , LOAD_POSTS_REQUEST,\r\n    LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\r\n    LIKE_POST_REQUEST, LIKE_POST_SUCCESS,\r\n    UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_FAILURE,\r\n    UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\r\n    RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE,\r\n    LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\r\n    LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE,\r\n    LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME , REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\n\r\nfunction retweetAPI(data) {\r\n    return axios.post(`/post/${data}/retweet`);\r\n  }\r\n  \r\n  function* retweet(action) {\r\n    try {\r\n      const result = yield call(retweetAPI, action.data);\r\n      yield put({\r\n        type: RETWEET_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: RETWEET_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n  }\r\n\r\nfunction uploadImagesAPI(data) {\r\n    return axios.post('/post/images', data);\r\n}\r\n  \r\nfunction* uploadImages(action) {\r\n    try {\r\n      const result = yield call(uploadImagesAPI, action.data);\r\n      yield put({\r\n        type: UPLOAD_IMAGES_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      yield put({\r\n        type: UPLOAD_IMAGES_FAILURE,\r\n        error: err.response.data,\r\n      });\r\n    }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.delete(`/post/${data}/like`) \r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {\r\n        const result = yield call(unlikePostAPI, action.data);\r\n        yield put({\r\n            type : UNLIKE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNLIKE_POST_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction likePostAPI(data) {\r\n    return axios.patch(`/post/${data}/like`); \r\n}\r\n\r\nfunction* likePost(action) {\r\n    try {\r\n        const result = yield call(likePostAPI, action.data);\r\n        yield put({\r\n            type : LIKE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LIKE_POST_FAILURE,\r\n            error : err.response.data, \r\n        })\r\n    }\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get(`/post/${data}`) // get에서 data를 넣으려면 주소뒤에 ?키=값으로 쿼리스트링으로 전달\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n        const result = yield call(loadPostAPI, action.data);\r\n        yield put({\r\n            type : LOAD_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOAD_POST_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n    return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`) // get에서 data를 넣으려면 주소뒤에 ?키=값으로 쿼리스트링으로 전달\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n    try {\r\n        const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n        yield put({\r\n            type : LOAD_HASHTAG_POSTS_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_HASHTAG_POSTS_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n    return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`) // get에서 data를 넣으려면 주소뒤에 ?키=값으로 쿼리스트링으로 전달\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n    try {\r\n        const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n        yield put({\r\n            type : LOAD_USER_POSTS_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_USER_POSTS_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction loadPostsAPI(lastId) {\r\n    return axios.get(`/posts?lastId=${lastId || 0}`) // get에서 data를 넣으려면 주소뒤에 ?키=값으로 쿼리스트링으로 전달\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try {\r\n        const result = yield call(loadPostsAPI, action.lastId);\r\n        yield put({\r\n            type : LOAD_POSTS_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_POSTS_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post',  data) \r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data); \r\n        yield put({\r\n            type : ADD_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n        yield put({\r\n            type : ADD_POST_TO_ME,\r\n            data : result.data.id,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type : ADD_POST_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\nfunction removePostAPI(data) {\r\n    return axios.delete(`/post/${data}`) // delete의 데이터는 post.id\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n        const result = yield call(removePostAPI, action.data);\r\n        // post 리듀서 조작\r\n        yield put({\r\n            type : REMOVE_POST_SUCCESS,\r\n            data : result.data,\r\n        });\r\n        // user 리듀서 조작\r\n        yield put({\r\n            type : REMOVE_POST_OF_ME,\r\n            data : action.data,\r\n        })\r\n    } catch(err) {\r\n        yield put({\r\n            type : REMOVE_POST_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        const result = yield call(addCommentAPI, action.data);\r\n        yield put({\r\n            type : ADD_COMMENT_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : ADD_COMMENT_FAILURE,\r\n            error : err.response.data \r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n    yield takeLatest( RETWEET_REQUEST, retweet);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n    yield takeLatest( UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n    yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n    yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction* watchLoadPosts() {\r\n    yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest( LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n    yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchRetweet),\r\n        fork(watchUploadImages),\r\n        fork(watchUnlikePost),\r\n        fork(watchLikePost),\r\n        fork(watchLoadUserPosts),\r\n        fork(watchLoadHashtagPosts),\r\n        fork(watchLoadPosts),\r\n        fork(watchLoadPost),\r\n        fork(watchAddPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}\r\n\r\n\r\n// post saga에서 action 리듀서 호출\r\n\r\n// 요청을 보낸 사람이 누군지 알기 위해서는 쿠키를 보내주어야 하기 때문에 front에서는 withCredentials : true,\r\n// back에서는 cors에서 credentials  true를 해주어야함","import axios from 'axios';\r\nimport {all, fork, put, takeLatest, call} from 'redux-saga/effects';\r\nimport { \r\n    LOG_IN_SUCCESS, LOG_OUT_SUCCESS, SIGN_UP_SUCCESS,\r\n    LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST,\r\n    LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, \r\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, \r\n    REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE,\r\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE\r\n} from '../reducers/user';\r\n\r\n\r\n\r\nfunction removeFollowerAPI(data) {\r\n    return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollower(action) {\r\n    try {\r\n        const result = yield call(removeFollowerAPI, action.data);\r\n        yield put({\r\n            type : REMOVE_FOLLOWER_SUCCESS,\r\n            data : result.data,\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : REMOVE_FOLLOWER_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n    return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n    try {\r\n        const result = yield call(loadFollowersAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_SUCCESS,\r\n            data : result.data,\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWERS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n    return axios.get('/user/followings', data)\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n    try {\r\n        const result = yield call(loadFollowingsAPI, action.data);\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : LOAD_FOLLOWINGS_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n    return axios.patch('/user/nickname', {nickname : data})\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n    try {\r\n        const result = yield call(changeNicknameAPI, action.data);\r\n        yield put({\r\n            type : CHANGE_NICKNAME_SUCCESS,\r\n            data : result.data\r\n        })\r\n    }catch(err) {\r\n        yield put({\r\n            type : CHANGE_NICKNAME_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n    return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n    try {\r\n        const result = yield call(loadUserAPI, action.data)\r\n        yield put({\r\n            type : LOAD_USER_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : LOAD_USER_FAILURE,\r\n            error : err.response.data, \r\n        });\r\n    }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo() {\r\n    try {\r\n        const result = yield call(loadMyInfoAPI);\r\n        yield put({\r\n            type : LOAD_MY_INFO_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOAD_MY_INFO_FAILURE,\r\n            error : err.response.data, \r\n        });\r\n    }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login', data); // 로그인 요청 보냄\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        const result = yield call(logInAPI, action.data); // 로그인 요청에 대한 결과값을 받아서 변수에 저장\r\n        \r\n        yield put({\r\n            type : LOG_IN_SUCCESS,\r\n            data : result.data, // 로그인 성공시 결과값 안에 들어있는 data\r\n        });\r\n    } catch(err) {\r\n        console.error(err);\r\n        yield put({\r\n            type : LOG_IN_FAILURE,\r\n            error : err.response.data, // 로그인 실패시 결과값 안에 들어있는 data\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({\r\n            type : LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : LOG_OUT_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user', data) // data는 email,password,nickname이 들어있는 객체이다.\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try{\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(result);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type : SIGN_UP_FAILURE,\r\n            error : err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.patch(`/user/${data}/follow`); \r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        const result = yield call(followAPI, action.data);\r\n        yield put({\r\n            type : FOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : FOLLOW_FAILURE,\r\n            error : err.response.data, \r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.delete(`/user/${data}/follow`); // 로그인 요청 보냄\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n        const result = yield call(unfollowAPI, action.data);\r\n        yield put({\r\n            type : UNFOLLOW_SUCCESS,\r\n            data : result.data,\r\n        });\r\n    } catch(err) {\r\n        yield put({\r\n            type : UNFOLLOW_FAILURE,\r\n            error : err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\nfunction* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\nfunction* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\nfunction* watchChnageNickname() {\r\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchChnageNickname),\r\n        fork(watchLoadMyInfo),\r\n        fork(watchLoadUser),\r\n        fork(watchRemoveFollower),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n    ])\r\n}","export const backUrl = process.env.NODE_ENV === 'production' ? 'http://api.nodebird.com' : 'http://localhost:3065';","import {all, fork} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport postSaga from './post';\r\nimport userSaga from './user';\r\nimport {backUrl} from '../config/config';\r\n\r\naxios.defaults.baseURL = backUrl;\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(postSaga),\r\n        fork(userSaga),\r\n    ]);\r\n}\r\n\r\n// all은 배열 안에 있는 것을 모두 실행\r\n// put은 dispatch와 같은 역할\r\n// fork와 call의 차이점 : fork는 비동기 함수 호출이고 call은 동기 함수 호출\r\n// 즉 fork로 호출하면 결과값이 다 받아와지지 않았음에도 불구하고 action을 실행하고\r\n// call로 호출하면 결과값이 다 받아와진 이후에 action 실행(await 같은 역할)\r\n// call(logInAPI, action.data) 오른쪽 코드와 같음 logInAPI(action.data)\r\n\r\n// 간단하게 코드 대체가 가능한데 call과 yield와 같은 effect, 제너레이터를  사용하는 이유\r\n// 에러가 났을 때 코드 한줄한줄 테스트해 볼 수 있기 때문에\r\n\r\n// yield와 take는 딱 한번만 실행됨 따라서 while이나 takeEvery라는 effect을 써서 무한 반복되게 함\r\n// while take는 동기적으로 동작하지만 takeEvery는 비동기로 동작한다는 차이가 있다.\r\n// 보통 while은 직관적이지도 않고 코드상으로 보기도 좋지 않아 takeEvery를 주로 씀\r\n\r\n// takeLatest란 실수로 로그인 버튼을 연속으로 누르거나 포스팅 버튼을 연속으로 누르거나와 같은 연속적인\r\n// 액션이 일어날때 같은 로딩상태이면(이미 완료된 건 취소X) 앞의 액션은 무시되고 마지막 액션만 실행되게 하는 effect\r\n// 이때 주의점은 프론트가 백엔드에 요청을 두번 했을 때 응답이 한번만 되는 것이지 요청이 한번만 들어오게 하는 것은 아니다.\r\n// 결론 서버에는 데이터가 두 번 저장되는 것\r\n\r\n// 따라서 위와 같이 요청이 두 번 서버에 저장되는걸 막기 위해 throttle을 사용한다.\r\n// 예를 들어 throttle (\"ADD_POST_REQUEST\", addPost, 2000) 이면 2초 안에는 액션이 1번만 보내지도록 제한을 두는 것\r\n// 보통 throttle은 특수한 경우에만 쓰고 takeLastest를 사용하고 백엔드에서 액션을 점검하는 편","import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({dispatch, getState}) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(applyMiddleware(...middlewares));\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug : process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;\r\n\r\n// action을 만들면 history(기록)으로 남는다.\r\n\r\n// history가 쌓이면 메모리도 많이 잡아먹고 중앙데이터들이 어떻게 변하는지 보이기때문에\r\n// 보안에도 취약할 수가 있다. 따라 첫번째는 배포용(devtools 연결X) 두번째는 개발용(devtools 연결O)\r\n// compose(applyMiddleware([]))\r\n// composeWithDevTools(applyMiddleware([]))\r\n\r\n// 개발자 도구에서 redux를 들어가보면 로그인 로그아웃 기록이 history에 저장되어 확인가능하다.","module.exports = require(\"next-redux-wrapper\");","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n    loadMyInfoLoading : false,\r\n    loadMyInfoDone : false, // 유저 정보 가져오기 시도중\r\n    loadMyInfoError : null,\r\n    loadUserLoading : false,\r\n    loadUserDone : false, // 유저 정보 가져오기 시도중\r\n    loadUserError : null,\r\n    followLoading : false,\r\n    followDone : false, // 팔로우 시도중\r\n    followError : null,\r\n    unfollowLoading : false,\r\n    unfollowDone : false, // 언팔로우 시도중\r\n    unfollowError : null,\r\n    logInLoading : false,\r\n    logInDone : false, // 로그인 시도중\r\n    logInError : null,\r\n    logOutLoading : false, // 로그아웃 시도중\r\n    logOutDone : false,\r\n    logOutError : null,\r\n    signUpLoading : false, // 회원가입 시도중\r\n    signUpDone : false,\r\n    signUpError : null,\r\n    changeNicknameLoading : false, // 닉네임 변경 시도중\r\n    changeNicknameDone : false,\r\n    changeNicknameError : null,\r\n    loadFollowersLoading : false, // 팔로워 목록 가져오기 시도중\r\n    loadFollowersDone : false,\r\n    loadFollowersError : null,\r\n    loadFollowingsLoading : false, // 팔로잉 목록 가져오기 시도중\r\n    loadFollowingsDone : false,\r\n    loadFollowingsError : null,\r\n    removeFollowerLoading : false,\r\n    removeFollowerDone : false, // 팔로워 제거 시도중\r\n    removeFollowerError : null,\r\n    me : null,\r\n    userInfo : null,\r\n}\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\r\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\r\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type : LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = (data) => {\r\n    return {\r\n        type : LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case LOAD_FOLLOWERS_REQUEST:\r\n                draft.loadFollowersLoading = true;\r\n                draft.loadFollowersDone = false;\r\n                draft.loadFollowersError = null;\r\n                break;\r\n            case LOAD_FOLLOWERS_SUCCESS:\r\n                draft.loadFollowersLoading = false;\r\n                draft.loadFollowersDone = true;\r\n                draft.me.Followers = action.data; \r\n                break;\r\n            case LOAD_FOLLOWERS_FAILURE:\r\n                draft.loadFollowersLoading = false;\r\n                draft.loadFollowersError = action.error;\r\n                break;\r\n            case LOAD_FOLLOWINGS_REQUEST:\r\n                draft.loadFollowingsLoading = true;\r\n                draft.loadFollowingsDone = false;\r\n                draft.loadFollowingsError = null;\r\n                break;\r\n            case LOAD_FOLLOWINGS_SUCCESS:\r\n                draft.loadFollowingsLoading = false;\r\n                draft.loadFollowingsDone = true;\r\n                draft.me.Followings = action.data; // 내 팔로잉 목록에 액션으로 받은 데이터인 아이디를 넣어줌\r\n                break;\r\n            case LOAD_FOLLOWINGS_FAILURE:\r\n                draft.loadFollowingsLoading = false;\r\n                draft.loadFollowingsError = action.error;\r\n                break;\r\n            case LOAD_MY_INFO_REQUEST:\r\n                draft.loadMyInfoLoading = true;\r\n                draft.loadMyInfoDone = false;\r\n                draft.loadMyInfoError = null;\r\n                break;\r\n            case LOAD_MY_INFO_SUCCESS:\r\n                draft.loadMyInfoLoading = false;\r\n                draft.loadMyInfoDone = true;\r\n                draft.me = action.data; // 내 팔로잉 목록에 액션으로 받은 데이터인 아이디를 넣어줌\r\n                break;\r\n            case LOAD_MY_INFO_FAILURE:\r\n                draft.loadMyInfoLoading = false;\r\n                draft.loadMyInfoError = action.error;\r\n                break;\r\n            case LOAD_USER_REQUEST:\r\n                draft.loadUserLoading = true;\r\n                draft.loadUserDone = false;\r\n                draft.loadUserError = null;\r\n                break;\r\n            case LOAD_USER_SUCCESS:\r\n                draft.loadUserLoading = false;\r\n                draft.loadUserDone = true;\r\n                draft.userInfo = action.data; \r\n                break;\r\n            case LOAD_USER_FAILURE:\r\n                draft.loadUserLoading = false;\r\n                draft.loadUserError = action.error;\r\n                break;\r\n            case FOLLOW_REQUEST:\r\n                draft.followLoading = true;\r\n                draft.followDone = false;\r\n                draft.followError = null;\r\n                break;\r\n            case FOLLOW_SUCCESS:\r\n                draft.followLoading = false;\r\n                draft.followDone = true;\r\n                draft.me.Followings.push({id : action.data.UserId}); // 내 팔로잉 목록에 액션으로 받은 데이터인 아이디를 넣어줌\r\n                break;\r\n            case FOLLOW_FAILURE:\r\n                draft.followLoading = false;\r\n                draft.followError = action.error;\r\n                break;\r\n            case UNFOLLOW_REQUEST:\r\n                draft.unfollowLoading = true;\r\n                draft.unfollowDone = false;\r\n                draft.unfollowError = null;\r\n                break;\r\n            case UNFOLLOW_SUCCESS:\r\n                draft.unfollowLoading = false;\r\n                draft.unfollowDone = true;\r\n                // 아이디가 같지 않은 사람만 남겨둠(언팔로우 한 사람은 제외됨)\r\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId)\r\n                break;\r\n            case REMOVE_FOLLOWER_FAILURE:\r\n                draft.removeFollowerLoading = false;\r\n                draft.removeFollowerDone = false;\r\n                draft.removeFollowerError = action.error;\r\n                break;\r\n            case REMOVE_FOLLOWER_SUCCESS:\r\n                draft.removeFollowerLoading = false;\r\n                draft.removeFollowerDone = true;\r\n                draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n                break;\r\n            case REMOVE_FOLLOWER_FAILURE:\r\n                draft.removeFollowerLoading = false;\r\n                draft.removeFollowerDone = false;\r\n                draft.removeFollowerError = action.error;\r\n                break;\r\n            case LOG_IN_REQUEST:\r\n                draft.logInLoading = true;\r\n                draft.logInDone = false;\r\n                draft.logInError = null;\r\n                break;\r\n            case LOG_IN_SUCCESS:\r\n                draft.logInLoading = false;\r\n                draft.me = action.data;\r\n                draft.logInDone = true;\r\n                break;\r\n            case LOG_IN_FAILURE:\r\n                draft.logInLoading = false;\r\n                draft.logInError = action.error;\r\n                break;\r\n            case LOG_OUT_REQUEST : \r\n                draft.logOutLoading = true;\r\n                draft.logOutDone = false;\r\n                draft.logOutError = null;\r\n                break;\r\n            case LOG_OUT_SUCCESS : \r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.me = null;\r\n                break;\r\n            case LOG_OUT_FAILURE : \r\n                draft.logOutLoading = false;\r\n                draft.logOutDone = true;\r\n                draft.logOutError = action.error;\r\n                break;\r\n            case SIGN_UP_REQUEST : \r\n                draft.signUpLoading = true;\r\n                draft.signUpDone = false;\r\n                draft.signUpError = null;\r\n                break;\r\n            case SIGN_UP_SUCCESS : \r\n                draft.signUpLoading = false;\r\n                draft.signUpDone = true;\r\n                break;\r\n            case SIGN_UP_FAILURE : \r\n                draft.signUpLoading = false;\r\n                draft.signUpError = action.error;\r\n                break;\r\n            case CHANGE_NICKNAME_REQUEST : \r\n                draft.changeNicknameLoading = true;\r\n                draft.changeNicknameDone = false;\r\n                draft.changeNicknameError = null;\r\n                break;\r\n            case CHANGE_NICKNAME_SUCCESS :\r\n                draft.changeNicknameLoading = false;\r\n                draft.me.nickname = action.data.nickname;\r\n                draft.changeNicknameDone = true;\r\n                break;\r\n            case CHANGE_NICKNAME_FAILURE : \r\n                draft.changeNicknameLoading = false;\r\n                draft.changeNicknameDone = false;\r\n                draft.changeNicknameError = action.error;\r\n                break;\r\n            case ADD_POST_TO_ME : \r\n                draft.me.Posts.unshift({id : action.data});\r\n                break;\r\n                // immer 적용 전 작성한 코드\r\n                // return {\r\n                //     ...state,\r\n                //     me : {\r\n                //         ...state.me,\r\n                //         Posts : [{id : action.data}, ...state.me.Posts],\r\n                //     }\r\n                // }\r\n            case REMOVE_POST_OF_ME : \r\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n                break;\r\n                // return {\r\n                //     ...state,\r\n                //     me : {\r\n                //         ...state.me,\r\n                //         Posts : state.me.Posts.filter((v) => v.id !== action.data),\r\n                //     },\r\n                // };\r\n            default :\r\n                break;\r\n                \r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport default reducer;","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n    mainPosts : [],\r\n    singlePost : null,\r\n    imagePaths : [],\r\n    hasMorePost : true,\r\n    likePostLoading: false,\r\n    likePostDone: false,\r\n    likePostError: null,\r\n    unlikePostLoading: false,\r\n    unlikePostDone: false,\r\n    unlikePostError: null,\r\n    loadPostLoading: false,\r\n    loadPostDone: false,\r\n    loadPostError: null,\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n    uploadImagesLoading: false,\r\n    uploadImagesDone: false,\r\n    uploadImagesError: null,\r\n    retweetLoading: false,\r\n    retweetDone: false,\r\n    retweetError: null,\r\n}\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\r\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\r\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const addPost = (data) =>({\r\n    type : ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) =>({\r\n    type : ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case REMOVE_IMAGE :\r\n                draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n                break;\r\n            case RETWEET_REQUEST : \r\n                draft.retweetLoading = true;\r\n                draft.retweetDone = false;\r\n                draft.retweetError = null;\r\n                break;\r\n            case RETWEET_SUCCESS : {\r\n                draft.retweetLoading = false;\r\n                draft.retweetDone = true;\r\n                draft.mainPosts.unshift(action.data);\r\n                break;\r\n            }\r\n            case RETWEET_FAILURE : \r\n                draft.retweetLoading = false;\r\n                draft.retweetError = action.error;\r\n                break;\r\n            case UPLOAD_IMAGES_REQUEST : \r\n                draft.uploadImagesLoading = true;\r\n                draft.uploadImagesDone = false;\r\n                draft.uploadImagesError = null;\r\n                break;\r\n            case UPLOAD_IMAGES_SUCCESS : {\r\n                draft.imagePaths = draft.imagePaths.concat(action.data); // routes/post에서 res.json으로 받아온 이미지 주소\r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesDone = true;\r\n                break;\r\n            }\r\n            case UPLOAD_IMAGES_FAILURE : \r\n                draft.uploadImagesLoading = false;\r\n                draft.uploadImagesError = action.error;\r\n                break;\r\n            case LIKE_POST_REQUEST : \r\n                draft.likePostLoading = true;\r\n                draft.likePostDone = false;\r\n                draft.likePostError = null;\r\n                break;\r\n            case LIKE_POST_SUCCESS : {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId); // 메인포스트 중에서 전달받은 액션데이터의 포스트아이가 같은 걸 찾아서\r\n                post.Likers.push({id : action.data.UserId}); // 포스트 Likers에 좋아요를 누른 사람(사용자아이디)의 아이디를 넣는다.\r\n                draft.likePostLoading = false;\r\n                draft.likePostDone = true;\r\n                break;\r\n            }\r\n            case LIKE_POST_FAILURE : \r\n                draft.likePostLoading = false;\r\n                draft.likePostError = action.error;\r\n                break;\r\n            case UNLIKE_POST_REQUEST : \r\n                draft.unlikePostLoading = true;\r\n                draft.unlikePostDone = false;\r\n                draft.unlikePostError = null;\r\n                break;\r\n            case UNLIKE_POST_SUCCESS : {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostDone = true;\r\n                break;\r\n            }\r\n            case UNLIKE_POST_FAILURE : \r\n                draft.unlikePostLoading = false;\r\n                draft.unlikePostError = action.error;\r\n                break;\r\n            case LOAD_POST_REQUEST : \r\n                draft.loadPostLoading = true;\r\n                draft.loadPostDone = false;\r\n                draft.loadPostError = null;\r\n                break;\r\n            case LOAD_POST_SUCCESS :\r\n                draft.loadPostLoading = false;\r\n                draft.loadPostDone = true;\r\n                draft.singlePost = action.data;\r\n                break;\r\n            case LOAD_POST_FAILURE : \r\n                draft.loadPostLoading = false;\r\n                draft.loadPostError = action.error;\r\n                break;\r\n            case LOAD_USER_POSTS_REQUEST :\r\n            case LOAD_HASHTAG_POSTS_REQUEST : \r\n            case LOAD_POSTS_REQUEST : \r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone = false;\r\n                draft.loadPostsError = null;\r\n                break;\r\n            case LOAD_USER_POSTS_SUCCESS :\r\n            case LOAD_HASHTAG_POSTS_SUCCESS : \r\n            case LOAD_POSTS_SUCCESS :\r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsDone = true;\r\n                draft.mainPosts = draft.mainPosts.concat(action.data);\r\n                draft.hasMorePost = action.data.length === 10;\r\n                break;\r\n            case LOAD_USER_POSTS_FAILURE :\r\n            case LOAD_HASHTAG_POSTS_FAILURE : \r\n            case LOAD_POSTS_FAILURE : \r\n                draft.loadPostsLoading = false;\r\n                draft.loadPostsError = action.error;\r\n                break;\r\n            \r\n            case ADD_POST_REQUEST : \r\n                draft.addPostLoading = true;\r\n                draft.addPostDone = false;\r\n                draft.addPostError = null;\r\n                break;\r\n            case ADD_POST_SUCCESS :\r\n                draft.addPostLoading = false;\r\n                draft.mainPosts.unshift(action.data); // dummyPost를 앞에 추가해야지 게시글이 위로 쌓임;\r\n                draft.addPostDone = true;\r\n                draft.imagePaths = [];\r\n                break;\r\n            case ADD_POST_FAILURE : \r\n                draft.addPostLoading = false;\r\n                draft.addPostError = action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST : \r\n                draft.removePostLoading = true;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS :\r\n                draft.removePostLoading = false;\r\n                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.postId);\r\n                draft.removePostDone = true;\r\n                break;\r\n            case REMOVE_POST_FAILURE : \r\n                draft.removePostLoading = false;\r\n                draft.removePostDone = false;\r\n                draft.removePostError = action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST : \r\n                draft.addCommentLoading = true;\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS : {\r\n                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n                post.Comments.unshift(action.data);\r\n                draft.addCommentLoading = false;\r\n                draft.addCommentDone = true;\r\n                break;\r\n                // 불변성을 지키기 위해 아래와 같이 작성했던 코드를 immer를 사용하면 위의 코드로 정리 가능\r\n                // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n                // const post = {...state.mainPosts[postIndex]};\r\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n                // const mainPosts = [...state.mainPosts];\r\n                // mainPosts[postIndex] = post;\r\n                // return {\r\n                //     ...state,\r\n                //     mainPosts,\r\n                //     addCommentLoading : false,\r\n                //     addCommentDone : true,\r\n                // };\r\n            }\r\n            case ADD_COMMENT_FAILURE : \r\n                draft.addCommentLoading = false\r\n                draft.addCommentDone = false;\r\n                draft.addCommentError = action.error;\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n});\r\n    \r\n\r\n\r\nexport default reducer;\r\n\r\n// 불변성을 위해 immer 사용(알아서 불변성을 유지해줌)","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"axios\");"],"sourceRoot":""}